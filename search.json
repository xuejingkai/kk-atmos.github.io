[
  {
    "objectID": "notebooks/wrf_extract_wind.html",
    "href": "notebooks/wrf_extract_wind.html",
    "title": "ustc",
    "section": "",
    "text": "import salem \nimport xarray as xr\nimport pandas as pd\n#import xesmf as xe\nimport matplotlib.pyplot as plt\nimport glob\nimport numpy as np\n\n&lt;frozen importlib._bootstrap&gt;:228: RuntimeWarning: scipy._lib.messagestream.MessageStream size changed, may indicate binary incompatibility. Expected 56 from C header, got 64 from PyObject\n\n\n\nds=xr.open_dataset('/exports/d1/wrf_only_daily/fnl1.0/2019M01/2019010100_physical_0.nc')#.U[16,0,].values\nds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt;\nDimensions:   (Time: 24, south_north: 430, west_east: 600, bottom_top: 44,\n               west_east_stag: 601, south_north_stag: 431, ncl7: 24, ncl8: 44,\n               ncl9: 430, ncl10: 600)\nDimensions without coordinates: Time, south_north, west_east, bottom_top,\n                                west_east_stag, south_north_stag, ncl7, ncl8,\n                                ncl9, ncl10\nData variables: (12/26)\n    Times     (Time) |S19 ...\n    xlat      (south_north, west_east) float32 ...\n    xlon      (south_north, west_east) float32 ...\n    height    (Time, bottom_top, south_north, west_east) float32 ...\n    pressure  (Time, bottom_top, south_north, west_east) float32 ...\n    pblh      (Time, south_north, west_east) float32 ...\n    ...        ...\n    wdir      (Time, bottom_top, south_north, west_east) float32 ...\n    wspd      (Time, bottom_top, south_north, west_east) float32 ...\n    wd10      (Time, south_north, west_east) float32 ...\n    ws10      (Time, south_north, west_east) float32 ...\n    dens      (ncl7, ncl8, ncl9, ncl10) float32 ...\n    psfc      (Time, south_north, west_east) float32 ...xarray.DatasetDimensions:Time: 24south_north: 430west_east: 600bottom_top: 44west_east_stag: 601south_north_stag: 431ncl7: 24ncl8: 44ncl9: 430ncl10: 600Coordinates: (0)Data variables: (26)Times(Time)|S19...[24 values with dtype=|S19]xlat(south_north, west_east)float32...FieldType :104MemoryOrder :XY description :LATITUDE, SOUTH IS NEGATIVEunits :degree_northstagger :coordinates :XLONG XLAT[258000 values with dtype=float32]xlon(south_north, west_east)float32...FieldType :104MemoryOrder :XY description :LONGITUDE, WEST IS NEGATIVEunits :degree_eaststagger :coordinates :XLONG XLAT[258000 values with dtype=float32]height(Time, bottom_top, south_north, west_east)float32...FieldType :104MemoryOrder :XYZdescription :Heightunits :mstagger : coordinates :XLONG XLAT[272448000 values with dtype=float32]pressure(Time, bottom_top, south_north, west_east)float32...FieldType :104MemoryOrder :XYZdescription :Pressureunits :hPastagger :coordinates :XLONG XLAT XTIME[272448000 values with dtype=float32]pblh(Time, south_north, west_east)float32...FieldType :104MemoryOrder :XY description :PBL HEIGHTunits :mstagger :coordinates :XLONG XLAT XTIME[6192000 values with dtype=float32]tempc(Time, bottom_top, south_north, west_east)float32...description :Temperaturecoordinates :XLONG XLAT XTIMEstagger :units :CMemoryOrder :XYZFieldType :104[272448000 values with dtype=float32]rh(Time, bottom_top, south_north, west_east)float32...description :Relative Humidityunits :%coordinates :XLONG XLAT XTIMEstagger :MemoryOrder :XYZFieldType :104[272448000 values with dtype=float32]rh2(Time, south_north, west_east)float32...description :2m Relative Humidityunits :%coordinates :XLONG XLAT XTIMEstagger :MemoryOrder :XY FieldType :104[6192000 values with dtype=float32]t2(Time, south_north, west_east)float32...FieldType :104MemoryOrder :XY description :TEMP at 2 Munits :Kstagger :coordinates :XLONG XLAT XTIME[6192000 values with dtype=float32]t(Time, bottom_top, south_north, west_east)float32...FieldType :104MemoryOrder :XYZdescription :perturbation potential temperature theta-t0units :Kstagger :coordinates :XLONG XLAT XTIME[272448000 values with dtype=float32]ua(Time, bottom_top, south_north, west_east)float32...coordinates :XLONG XLATstagger : units :m s-1description :x-wind componentMemoryOrder :XYZFieldType :104[272448000 values with dtype=float32]u(Time, bottom_top, south_north, west_east)float32...coordinates :XLONG XLATstagger : MemoryOrder :XYZFieldType :104units :m/sdescription :u,v met velocity[272448000 values with dtype=float32]U(Time, bottom_top, south_north, west_east_stag)float32...FieldType :104MemoryOrder :XYZdescription :x-wind componentunits :m s-1stagger :Xcoordinates :XLONG_U XLAT_U XTIME[272902080 values with dtype=float32]u10(Time, south_north, west_east)float32...FieldType :104MemoryOrder :XY description :U at 10 Munits :m s-1stagger :coordinates :XLONG XLAT XTIME[6192000 values with dtype=float32]va(Time, bottom_top, south_north, west_east)float32...coordinates :XLONG XLATstagger : units :m s-1description :y-wind componentMemoryOrder :XYZFieldType :104[272448000 values with dtype=float32]v(Time, bottom_top, south_north, west_east)float32...coordinates :XLONG XLATstagger : MemoryOrder :XYZFieldType :104units :m/sdescription :u,v met velocity[272448000 values with dtype=float32]V(Time, bottom_top, south_north_stag, west_east)float32...FieldType :104MemoryOrder :XYZdescription :y-wind componentunits :m s-1stagger :Ycoordinates :XLONG_V XLAT_V XTIME[273081600 values with dtype=float32]v10(Time, south_north, west_east)float32...FieldType :104MemoryOrder :XY description :V at 10 Munits :m s-1stagger :coordinates :XLONG XLAT XTIME[6192000 values with dtype=float32]wa(Time, bottom_top, south_north, west_east)float32...coordinates :XLONG XLATstagger : units :m s-1description :z-wind componentMemoryOrder :XYZFieldType :104[272448000 values with dtype=float32]wdir(Time, bottom_top, south_north, west_east)float32...FieldType :104MemoryOrder :XYZunits :m s-1stagger : coordinates :XLONG XLATdescription :grid relative wind speed and direction[272448000 values with dtype=float32]wspd(Time, bottom_top, south_north, west_east)float32...FieldType :104MemoryOrder :XYZunits :m s-1stagger : coordinates :XLONG XLATdescription :grid relative wind speed and direction[272448000 values with dtype=float32]wd10(Time, south_north, west_east)float32...coordinates :XLONG XLAT XTIMEstagger :units :m s-1MemoryOrder :XY FieldType :104description :10m grid relative wind speed and direction[6192000 values with dtype=float32]ws10(Time, south_north, west_east)float32...coordinates :XLONG XLAT XTIMEstagger :units :m s-1MemoryOrder :XY FieldType :104description :10m grid relative wind speed and direction[6192000 values with dtype=float32]dens(ncl7, ncl8, ncl9, ncl10)float32...[272448000 values with dtype=float32]psfc(Time, south_north, west_east)float32...FieldType :104MemoryOrder :XY description :SFC PRESSUREunits :Pastagger :coordinates :XLONG XLAT XTIME[6192000 values with dtype=float32]Indexes: (0)Attributes: (0)\n\n\n\n'''30.774N, 90.988E，这个经纬度\n2019年5月1日到7月9日\n早晨8点到晚上20点\n高度200米范围内\n'''\n\n'30.774N, 90.988E，这个经纬度\\n2019年5月1日到7月9日\\n早晨8点到晚上20点\\n高度200米范围内\\n'\n\n\n\ndef nearest_position( stn_lat, stn_lon, lat2d, lon2d):\n    \"\"\"获取最临近格点坐标索引\n    stn_lat  : 站点纬度\n    stn_lon  : 站点经度\n    lat2d    : numpy.ndarray网格二维经度坐标\n    lon2d    : numpy.ndarray网格二维纬度坐标\n    Return: (y_index, x_index)\n    \"\"\"\n    difflat = stn_lat - lat2d;\n    difflon = stn_lon - lon2d;\n    rad = np.multiply(difflat,difflat)+np.multiply(difflon , difflon)\n    aa=np.where(rad==np.min(rad))\n    ind=np.squeeze(np.array(aa))\n    return tuple(ind)\nlat2d=ds.xlat\nlon2d=ds.xlon\nstn_lat=30.774\nstn_lon=90.988\nid1,id2=nearest_position( stn_lat, stn_lon, lat2d, lon2d)\n\n\nds.xlon[id1,id2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'xlon' ()&gt;\narray(90.98419, dtype=float32)\nAttributes:\n    FieldType:    104\n    MemoryOrder:  XY \n    description:  LONGITUDE, WEST IS NEGATIVE\n    units:        degree_east\n    stagger:      \n    coordinates:  XLONG XLATxarray.DataArray'xlon'90.98array(90.98419, dtype=float32)Coordinates: (0)Indexes: (0)Attributes: (6)FieldType :104MemoryOrder :XY description :LONGITUDE, WEST IS NEGATIVEunits :degree_eaststagger :coordinates :XLONG XLAT\n\n\n\nds.height[0,:,id1,id2].load().values.astype(int)&lt;200\n\narray([ True,  True,  True,  True,  True,  True,  True,  True, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False])\n\n\n\nds.xlat[id1,id2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'xlat' ()&gt;\narray(30.807167, dtype=float32)\nAttributes:\n    FieldType:    104\n    MemoryOrder:  XY \n    description:  LATITUDE, SOUTH IS NEGATIVE\n    units:        degree_north\n    stagger:      \n    coordinates:  XLONG XLATxarray.DataArray'xlat'30.81array(30.807167, dtype=float32)Coordinates: (0)Indexes: (0)Attributes: (6)FieldType :104MemoryOrder :XY description :LATITUDE, SOUTH IS NEGATIVEunits :degree_northstagger :coordinates :XLONG XLAT\n\n\n\n\n\ndssel=ds[['Times','u','v','height','xlon','xlat','bottom_top']].sel(south_north=id1,west_east=id2,bottom_top=np.arange(7))\n\n# 将字节串转换为普通字符串\nstr_array = dssel['Times'].values.astype(str)\n\n# 将字符串转换为datetime\ndatetime_array = pd.to_datetime(str_array, format='%Y-%m-%d_%H:%M:%S')\n#datetime_array\n\ndssel['Time']=datetime_array+pd.Timedelta('8H')#=pd.date_range('20220821T00','20220821T23',freq='1H')+pd.Timedelta('8H')\ndssel#['Time']\n\ndssel=dssel.sel(Time=dssel.Time.dt.hour.isin(np.arange(8,21,1)))\ndssel['wind']=np.sqrt(dssel.u**2+dssel.v**2)\ndssel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt;\nDimensions:     (Time: 13, bottom_top: 7)\nCoordinates:\n  * bottom_top  (bottom_top) int64 0 1 2 3 4 5 6\n  * Time        (Time) datetime64[ns] 2019-01-01T08:00:00 ... 2019-01-01T20:0...\nData variables:\n    Times       (Time) |S19 b'2019-01-01_00:00:00' ... b'2019-01-01_12:00:00'\n    u           (Time, bottom_top) float32 0.5531 0.8811 1.041 ... 3.903 4.16\n    v           (Time, bottom_top) float32 1.464 1.02 0.8258 ... -0.2543 -0.4743\n    height      (Time, bottom_top) float32 ...\n    xlon        float32 90.98\n    xlat        float32 30.81\n    wind        (Time, bottom_top) float32 1.565 1.348 1.328 ... 3.911 4.187xarray.DatasetDimensions:Time: 13bottom_top: 7Coordinates: (2)bottom_top(bottom_top)int640 1 2 3 4 5 6array([0, 1, 2, 3, 4, 5, 6])Time(Time)datetime64[ns]2019-01-01T08:00:00 ... 2019-01-...array(['2019-01-01T08:00:00.000000000', '2019-01-01T09:00:00.000000000',\n       '2019-01-01T10:00:00.000000000', '2019-01-01T11:00:00.000000000',\n       '2019-01-01T12:00:00.000000000', '2019-01-01T13:00:00.000000000',\n       '2019-01-01T14:00:00.000000000', '2019-01-01T15:00:00.000000000',\n       '2019-01-01T16:00:00.000000000', '2019-01-01T17:00:00.000000000',\n       '2019-01-01T18:00:00.000000000', '2019-01-01T19:00:00.000000000',\n       '2019-01-01T20:00:00.000000000'], dtype='datetime64[ns]')Data variables: (7)Times(Time)|S19b'2019-01-01_00:00:00' ... b'201...array([b'2019-01-01_00:00:00', b'2019-01-01_01:00:00', b'2019-01-01_02:00:00',\n       b'2019-01-01_03:00:00', b'2019-01-01_04:00:00', b'2019-01-01_05:00:00',\n       b'2019-01-01_06:00:00', b'2019-01-01_07:00:00', b'2019-01-01_08:00:00',\n       b'2019-01-01_09:00:00', b'2019-01-01_10:00:00', b'2019-01-01_11:00:00',\n       b'2019-01-01_12:00:00'], dtype='|S19')u(Time, bottom_top)float320.5531 0.8811 1.041 ... 3.903 4.16coordinates :XLONG XLATstagger : MemoryOrder :XYZFieldType :104units :m/sdescription :u,v met velocityarray([[0.553104, 0.881084, 1.040602, 1.103072, 1.129773, 1.130292, 1.183324],\n       [0.964592, 1.274832, 1.392733, 1.429729, 1.454372, 1.465381, 1.533878],\n       [1.63442 , 1.944667, 2.121917, 2.176981, 2.202581, 2.228051, 2.308977],\n       [2.448273, 2.724256, 2.812196, 2.856564, 2.88804 , 2.914475, 2.988829],\n       [3.33203 , 3.708119, 3.824973, 3.878677, 3.914569, 3.941333, 4.003284],\n       [4.036066, 4.538952, 4.69962 , 4.785337, 4.855104, 4.934896, 5.093209],\n       [4.502602, 5.150357, 5.415547, 5.689705, 5.987775, 6.177474, 6.309227],\n       [5.21687 , 5.770557, 6.047645, 6.259041, 6.480338, 6.704912, 6.954165],\n       [5.221683, 5.750551, 6.008654, 6.201648, 6.402023, 6.581516, 6.82193 ],\n       [4.872368, 5.320437, 5.524746, 5.67529 , 5.852551, 6.044238, 6.316938],\n       [4.542207, 4.862448, 4.945309, 4.989773, 5.055711, 5.158739, 5.446548],\n       [4.080195, 4.355675, 4.433913, 4.475247, 4.519207, 4.579449, 4.764032],\n       [3.534902, 3.746383, 3.795099, 3.818999, 3.844995, 3.903072, 4.160403]],\n      dtype=float32)v(Time, bottom_top)float321.464 1.02 ... -0.2543 -0.4743coordinates :XLONG XLATstagger : MemoryOrder :XYZFieldType :104units :m/sdescription :u,v met velocityarray([[ 1.463655,  1.019787,  0.825754,  0.741998,  0.831956,  0.875573,\n         1.161229],\n       [ 1.466759,  1.001516,  0.783453,  0.728659,  0.816829,  0.925214,\n         1.181499],\n       [ 1.010277,  1.147648,  1.058269,  0.976209,  1.029346,  1.143649,\n         1.351712],\n       [ 0.793282,  0.976349,  1.099872,  1.194597,  1.294475,  1.391636,\n         1.553144],\n       [ 0.930586,  1.173519,  1.339196,  1.450626,  1.550557,  1.641033,\n         1.745526],\n       [ 1.149641,  1.429646,  1.573646,  1.650239,  1.70197 ,  1.740982,\n         1.788359],\n       [ 1.654824,  1.968094,  2.05387 ,  2.023285,  2.000641,  1.992272,\n         1.982667],\n       [ 1.483944,  1.534763,  1.520095,  1.499005,  1.478325,  1.460454,\n         1.430628],\n       [ 0.695689,  0.714904,  0.696775,  0.679659,  0.665062,  0.647209,\n         0.622208],\n       [ 0.295281,  0.284715,  0.249341,  0.218475,  0.191433,  0.165687,\n         0.128111],\n       [-0.073212, -0.110508, -0.157162, -0.197329, -0.240552, -0.286502,\n        -0.362465],\n       [-0.236606, -0.274156, -0.310775, -0.338886, -0.36398 , -0.400663,\n        -0.471368],\n       [-0.075162, -0.113123, -0.149045, -0.172224, -0.200367, -0.254309,\n        -0.4743  ]], dtype=float32)height(Time, bottom_top)float32...FieldType :104MemoryOrder :XYZdescription :Heightunits :mstagger : coordinates :XLONG XLAT[91 values with dtype=float32]xlon()float3290.98FieldType :104MemoryOrder :XY description :LONGITUDE, WEST IS NEGATIVEunits :degree_eaststagger :coordinates :XLONG XLATarray(90.98419, dtype=float32)xlat()float3230.81FieldType :104MemoryOrder :XY description :LATITUDE, SOUTH IS NEGATIVEunits :degree_northstagger :coordinates :XLONG XLATarray(30.807167, dtype=float32)wind(Time, bottom_top)float321.565 1.348 1.328 ... 3.911 4.187array([[1.5646762, 1.3476928, 1.3284281, 1.3294095, 1.4030466, 1.4297508,\n        1.6579227],\n       [1.7555114, 1.6211826, 1.597968 , 1.6047021, 1.6680554, 1.7330215,\n        1.9361615],\n       [1.9214547, 2.2580583, 2.3711731, 2.3858395, 2.4312372, 2.5044253,\n        2.6755373],\n       [2.5735843, 2.8939295, 3.0196304, 3.0962908, 3.1648765, 3.2296772,\n        3.3682866],\n       [3.4595394, 3.8893816, 4.0526366, 4.141069 , 4.210472 , 4.2693205,\n        4.3672814],\n       [4.1966057, 4.7587786, 4.956086 , 5.061891 , 5.144778 , 5.232993 ,\n        5.398056 ],\n       [4.797069 , 5.5135803, 5.791937 , 6.038744 , 6.3131623, 6.490789 ,\n        6.6134195],\n       [5.4238205, 5.971166 , 6.2357597, 6.4360404, 6.646821 , 6.8621254,\n        7.099797 ],\n       [5.2678227, 5.794819 , 6.0489187, 6.23878  , 6.4364743, 6.6132617,\n        6.850246 ],\n       [4.881307 , 5.32805  , 5.5303698, 5.679493 , 5.855681 , 6.0465083,\n        6.3182373],\n       [4.5427966, 4.8637033, 4.9478054, 4.9936733, 5.061431 , 5.166688 ,\n        5.458595 ],\n       [4.0870495, 4.364294 , 4.444791 , 4.48806  , 4.5338416, 4.596943 ,\n        4.787295 ],\n       [3.535701 , 3.7480907, 3.798025 , 3.8228803, 3.8502126, 3.9113476,\n        4.187351 ]], dtype=float32)Indexes: (2)bottom_topPandasIndexPandasIndex(Int64Index([0, 1, 2, 3, 4, 5, 6], dtype='int64', name='bottom_top'))TimePandasIndexPandasIndex(DatetimeIndex(['2019-01-01 08:00:00', '2019-01-01 09:00:00',\n               '2019-01-01 10:00:00', '2019-01-01 11:00:00',\n               '2019-01-01 12:00:00', '2019-01-01 13:00:00',\n               '2019-01-01 14:00:00', '2019-01-01 15:00:00',\n               '2019-01-01 16:00:00', '2019-01-01 17:00:00',\n               '2019-01-01 18:00:00', '2019-01-01 19:00:00',\n               '2019-01-01 20:00:00'],\n              dtype='datetime64[ns]', name='Time', freq=None))Attributes: (0)\n\n\n\nL=glob.glob('/exports/d1/wrf_only_daily/fnl1.0/2019M0[5-7]/*_physical_0.nc')\nL.sort()\nL\n\n['/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019053000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019053100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019063000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072100_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072200_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072300_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072400_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072500_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072600_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072700_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072800_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072900_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019073000_physical_0.nc',\n '/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019073100_physical_0.nc']\n\n\n\nDS=[]\nfor l in L:\n    ds=xr.open_dataset(l)\n    \n    \n\n    dssel=ds[['Times','u','v','height','xlon','xlat','bottom_top']].sel(south_north=id1,west_east=id2,bottom_top=np.arange(7))\n\n    # 将字节串转换为普通字符串\n    str_array = dssel['Times'].values.astype(str)\n\n    # 将字符串转换为datetime\n    datetime_array = pd.to_datetime(str_array, format='%Y-%m-%d_%H:%M:%S')\n    #datetime_array\n\n    dssel['Time']=datetime_array+pd.Timedelta('8H')#=pd.date_range('20220821T00','20220821T23',freq='1H')+pd.Timedelta('8H')\n    dssel#['Time']\n\n    dssel=dssel.sel(Time=dssel.Time.dt.hour.isin(np.arange(8,21,1)))\n    dssel['wind']=np.sqrt(dssel.u**2+dssel.v**2)\n    dssel.load()\n    \n    DS.append(dssel)\n    print(l)\n\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019050900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019051900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019052900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019053000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M05/2019053100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019060900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019061900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019062900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M06/2019063000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019070900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019071900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072100_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072200_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072300_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072400_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072500_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072600_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072700_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072800_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019072900_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019073000_physical_0.nc\n/exports/d1/wrf_only_daily/fnl1.0/2019M07/2019073100_physical_0.nc\n\n\n\nDS2=xr.concat(DS,dim='Time')\n\n\nDS2.to_dataframe().reset_index().to_csv('wind.csv')",
    "crumbs": [
      "Home",
      "Layout",
      "Notebook"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ustc",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.",
    "crumbs": [
      "Home",
      "Basics",
      "ustc"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "notebooks/ustc_plot_Anhuimap.html",
    "href": "notebooks/ustc_plot_Anhuimap.html",
    "title": "ustc",
    "section": "",
    "text": "import os\nimport math\nimport glob\nimport datetime\nfrom PIL import Image\nfrom shapely.geometry import Polygon\nimport numpy as np\nimport matplotlib\nmatplotlib.use('Agg')\nimport matplotlib.pyplot as plt\nfrom matplotlib import font_manager as fm, rcParams\nimport matplotlib.colors\nimport matplotlib.patches as mpathes\nfrom matplotlib.path import Path\nfrom mpl_toolkits.basemap import Basemap\nimport shapefile\n\ndef cmap_own():\n    cmap_value = np.loadtxt('/exports/swj/OMI_results/result_compare/colormap_22.txt')\n    cmap = []\n    for i in range(cmap_value.shape[0]):\n        cmap.append((cmap_value[i, 0], cmap_value[i, 1], cmap_value[i, 2]))\n\n    return matplotlib.colors.LinearSegmentedColormap.from_list('test_cmap', cmap, N=cmap_value.shape[0])\n\ndef shp2clip(originfig,ax,shpfile,region):\n    sf = shapefile.Reader(shpfile)\n    vertices = []\n    codes = []\n    for shape_rec in sf.shapeRecords():\n        if shape_rec.record[0] in region:\n            pts = shape_rec.shape.points\n            prt = list(shape_rec.shape.parts) + [len(pts)]\n            for i in range(len(prt) - 1):\n                for j in range(prt[i], prt[i+1]):\n                    vertices.append((pts[j][0], pts[j][1]))\n                codes += [Path.MOVETO]\n                codes += [Path.LINETO] * (prt[i+1] - prt[i] -2)\n                codes += [Path.CLOSEPOLY]\n            clip = Path(vertices, codes)\n            clip = mpathes.PathPatch(clip, transform=ax.transData)\n    for contour in originfig.collections:\n        contour.set_clip_path(clip)\n    return clip\n\ndef wgs84toWebMercator(lon,lat):\n    x =  lon*20037508.342789/180\n    y =math.log(math.tan((90+lat)*math.pi/360))/(math.pi/180)\n    y = y *20037508.34789/180\n    return x,y\n\nfpath = os.path.join(matplotlib.get_data_path(),'/exports/WST/himawari/tif_test/Bold.ttf')\nprop = fm.FontProperties(fname=fpath)\n\nfname = os.path.split(fpath)[1]\n\nlat_begin=28.5\nlat_end=35\nlon_begin=114.5\nlon_end=120\n\nfig = plt.figure(figsize=((lon_end-lon_begin)*2, (lat_end-lat_begin)*2))\nax1 = fig.add_axes([0.1, 0.1, 0.7, 0.7])\nm = Basemap(projection='cyl', resolution='l', llcrnrlat=lat_begin, urcrnrlat=lat_end, llcrnrlon=lon_begin, urcrnrlon=lon_end)\n\nm.readshapefile(\"/exports/WST/himawari/tif_test/anhuishp/anhuinew/anhui\", 'NAME1', linewidth=1, drawbounds=True, color='gray')\n\nfor shapedict, state in zip(m.NAME1_info, m.NAME1):\n    short_name = shapedict['市']\n    point = np.array(state)\n    # x,y = center_geolocation(point)\n    # 获取城市图形的中点\n    ref_polygon = Polygon(point)\n    # get the x and y coordinate of the centroid\n    x, y = [float(ref_polygon.centroid.wkt[7:19]), float(ref_polygon.centroid.wkt[25:39])]\n    # x, y = np.mean(np.array(state), axis=0)\n    # if (short_name == '连云港市')|(short_name == '南通市'):\n    if point.shape[0] &lt; 100:\n        continue\n    else:\n        plt.annotate(short_name[0:-1].format(fname), xy=(x - 0.2, y - 0.1), fontproperties=prop, fontsize=12)\n\ncdict = ['#FFFFFF', '#C2C8E1', '#9BA9DC', '#4C9DF4', '#86D1F9', '#A7E5EF', '#FEFC59', '#FD7822', '#FC131F',\n         '#A3090E']\ncolormap = cmap_own()\ncolormap.set_bad(color='w', alpha=0.0)\n\nposition = fig.add_axes([0.88, 0.1, 0.03, 0.7])\n\nplt.tight_layout()\n\ntime_target=''\nplt.savefig('./tropomi_Anhui_HCHO_' + time_target + '.png', dpi=300)\nplt.close()\nstr_day = './tropomi_Anhui_HCHO_' + time_target + '.png'\nimg = Image.open(str_day)\nimg = img.convert('RGBA')\n\npng = Image.open('/satellite/exports1/zhaochunhui/normal/pic/logotest4.png')\npng = png.resize((int(img.size[0] * 0.7 -3) , int(img.size[0] * 0.07)), Image.ANTIALIAS)\nr, g, b, a = png.split()\npng_x = int(img.size[0] / 10) + 2\npng_y = int(img.size[1] * 0.9) - int(img.size[0] * 0.07)-5\nimg.paste(png, (png_x, png_y), mask=a)\nimg.save(str_day, quality=95)\n\n/tmp/ipykernel_326436/4040225787.py:90: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.\n  plt.tight_layout()\n/tmp/ipykernel_326436/4040225787.py:100: DeprecationWarning: ANTIALIAS is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.LANCZOS instead.\n  png = png.resize((int(img.size[0] * 0.7 -3) , int(img.size[0] * 0.07)), Image.ANTIALIAS)\n\n\n\nfrom PIL import Image\nimport numpy as np\n\n\nimg_PIL = Image.open(str_day)#读取数据\nimg_PIL",
    "crumbs": [
      "Home",
      "Layout",
      "Notebook2"
    ]
  }
]